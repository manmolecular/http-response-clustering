[
    {
        "class_name": "Flask",
        "data": "HTTP/1.0 500 INTERNAL SERVER ERROR\r\nContent-Type: text/html; charset=utf-8\r\nX-XSS-Protection: 0\r\nConnection: close\r\nServer: Werkzeug/0.16.0 Python/3.7.0\r\nDate: Sun, 01 Mar 2020 21:16:08 GMT\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n  \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n  <head>\n    <title>AttributeError: 'NoneType' object has no attribute 'replace' // Werkzeug Debugger</title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"\n        type=\"text/css\">\n    <!-- We need to make sure this has a favicon so that the debugger does\n         not by accident trigger a request to /favicon.ico which might\n         change the application state. -->\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js\"></script>\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script>\n    <script type=\"text/javascript\">\n      var TRACEBACK = 140662905200424,\n          CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"uz0p9kEzBTARQz2TJosX\";\n    </script>\n  </head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>AttributeError</h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">AttributeError: 'NoneType' object has no attribute 'replace'</p>\n</div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2>\n<div class=\"traceback\">\n  \n  <ul><li><div class=\"frame\" id=\"frame-140662904713400\">\n  <h4>File <cite class=\"filename\">\"/usr/local/python3/lib/python3.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2463</em>,\n      in <code class=\"function\">__call__</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ, start_response):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def __repr__(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-140662904713904\">\n  <h4>File <cite class=\"filename\">\"/usr/local/python3/lib/python3.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2449</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>raise</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-140662904713960\">\n  <h4>File <cite class=\"filename\">\"/usr/local/python3/lib/python3.7/site-packages/flask_cors/extension.py\"</cite>,\n      line <em class=\"line\">161</em>,\n      in <code class=\"function\">wrapped_function</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span># Wrap exception handlers with cross_origin</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span># These error handlers will still respect the behavior of the route</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if options.get('intercept_exceptions', True):</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>def _after_request_decorator(f):</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>def wrapped_function(*args, **kwargs):</pre>\n<pre class=\"line current\"><span class=\"ws\">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>return wrapped_function</pre>\n<pre class=\"line after\"><span class=\"ws\">"
    },
    {
        "class_name": "Flask",
        "data": "HTTP/1.0 200 OK\r\nContent-Type: text/html; charset=utf-8\r\nContent-Length: 28\r\nServer: Werkzeug/0.14.1 Python/2.7.15\r\nDate: Thu, 05 Mar 2020 01:26:33 GMT\r\n\r\nWelcome to Python Flask App!"
    },
    {
        "class_name": "Flask",
        "data": "HTTP/1.0 500 INTERNAL SERVER ERROR\r\nContent-Type: text/html; charset=utf-8\r\nX-XSS-Protection: 0\r\nConnection: close\r\nServer: Werkzeug/0.15.4 Python/2.7.13\r\nDate: Thu, 05 Mar 2020 02:12:49 GMT\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n  \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n  <head>\n    <title>TypeError: The view function did not return a valid response. The function either returned None or ended without a return statement. // Werkzeug Debugger</title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"\n        type=\"text/css\">\n    <!-- We need to make sure this has a favicon so that the debugger does\n         not by accident trigger a request to /favicon.ico which might\n         change the application state. -->\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js\"></script>\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script>\n    <script type=\"text/javascript\">\n      var TRACEBACK = 139928091193616,\n          CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"260oJpewCXqzB4B8hGVq\";\n    </script>\n  </head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>TypeError</h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">TypeError: The view function did not return a valid response. The function either returned None or ended without a return statement.</p>\n</div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2>\n<div class=\"traceback\">\n  \n  <ul><li><div class=\"frame\" id=\"frame-139928091193744\">\n  <h4>File <cite class=\"filename\">\"/usr/local/lib/python2.7/dist-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2328</em>,\n      in <code class=\"function\">__call__</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ, start_response):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def __repr__(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return '&lt;%s %r&gt;' % (</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.__class__.__name__,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.name,</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139928091194000\">\n  <h4>File <cite class=\"filename\">\"/usr/local/lib/python2.7/dist-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2314</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>raise</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139928091194064\">\n  <h4>File <cite class=\"filename\">\"/usr/local/lib/python2.7/dist-packages/flask_restful/__init__.py\"</cite>,\n      line <em class=\"line\">269</em>,\n      in <code class=\"function\">error_router</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        </span>if self._has_fr_route():</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>return self.handle_error(e)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>except Exception:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>pass  # Fall through to original handler</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return original_handler(e)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><spa"
    },
    {
        "class_name": "Flask",
        "data": "HTTP/1.0 500 INTERNAL SERVER ERROR\r\nContent-Type: text/html; charset=utf-8\r\nX-XSS-Protection: 0\r\nConnection: close\r\nServer: Werkzeug/0.14.1 Python/2.7.5\r\nDate: Wed, 04 Mar 2020 21:34:15 GMT\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n  \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n  <head>\n    <title>OperationalError: (1054, &quot;Unknown column 'None' in 'field list'&quot;) // Werkzeug Debugger</title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"\n        type=\"text/css\">\n    <!-- We need to make sure this has a favicon so that the debugger does\n         not by accident trigger a request to /favicon.ico which might\n         change the application state. -->\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js\"></script>\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script>\n    <script type=\"text/javascript\">\n      var TRACEBACK = 140286589307216,\n          CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"6adx50ZB4EMbMjGYNaK6\";\n    </script>\n  </head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>_mysql_exceptions.OperationalError</h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">OperationalError: (1054, &quot;Unknown column 'None' in 'field list'&quot;)</p>\n</div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2>\n<div class=\"traceback\">\n  \n  <ul><li><div class=\"frame\" id=\"frame-140286589307280\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2309</em>,\n      in <code class=\"function\">__call__</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ, start_response):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def __repr__(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return '&lt;%s %r&gt;' % (</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.__class__.__name__,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.name,</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-140286589307472\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2295</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>raise</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-140286589307536\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1741</em>,\n      in <code class=\"function\">handle_exception</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">            </span># if we want to repropagate the exception, we can attempt to</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># raise it with the whole traceback in case we can do that</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># (the function was actually called from the except part)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># otherwise, we just raise the error again</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if exc_value is e:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>reraise(exc_type, exc_value, tb)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>else"
    },
    {
        "class_name": "Flask",
        "data": "HTTP/1.0 500 INTERNAL SERVER ERROR\r\nContent-Type: text/html; charset=utf-8\r\nX-XSS-Protection: 0\r\nConnection: close\r\nServer: Werkzeug/0.15.4 Python/2.7.5\r\nDate: Thu, 05 Mar 2020 13:45:45 GMT\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n  \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n  <head>\n    <title>TypeError: The view function did not return a valid response. The function either returned None or ended without a return statement. // Werkzeug Debugger</title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"\n        type=\"text/css\">\n    <!-- We need to make sure this has a favicon so that the debugger does\n         not by accident trigger a request to /favicon.ico which might\n         change the application state. -->\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js\"></script>\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script>\n    <script type=\"text/javascript\">\n      var TRACEBACK = 140073575826960,\n          CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"A3P3PGaeukGkcRaclnbK\";\n    </script>\n  </head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>TypeError</h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">TypeError: The view function did not return a valid response. The function either returned None or ended without a return statement.</p>\n</div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2>\n<div class=\"traceback\">\n  \n  <ul><li><div class=\"frame\" id=\"frame-140073575828496\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2328</em>,\n      in <code class=\"function\">__call__</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ, start_response):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def __repr__(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return '&lt;%s %r&gt;' % (</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.__class__.__name__,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.name,</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-140073575827536\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2314</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>raise</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-140073575828112\">\n  <h4>File <cite class=\"filename\">\"/usr/lib64/python2.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1760</em>,\n      in <code class=\"function\">handle_exception</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">            </span># if we want to repropagate the exception, we can attempt to</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># raise it with the whole traceback in case we can do that</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># (the function was actually called from the except part)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># otherwise, we just raise the error again</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if exc_value is e:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>reraise(exc"
    },
    {
        "class_name": "Flask",
        "data": "HTTP/1.0 200 OK\\r\\nContent-Type: text/html; charset=utf-8\\r\\nContent-Length: 43\\r\\nServer: Werkzeug/0.15.5 Python/3.6.8\\r\\nDate: Mon, 02 Mar 2020 12:45:48 GMT\\r\\n\\r\\nHello Flask! \\xe8\\xbf\\x99\\xe6\\x98\\xaf\\xe7\\xac\\xac\\xe4\\xb8\\x80\\xe4\\xb8\\xaaFlask web\\xe7\\xa8\\x8b\\xe5\\xba\\x8f"
    },
    {
        "class_name": "Flask",
        "data": "HTTP/1.0 200 OK\\r\\nContent-Type: text/html; charset=utf-8\\r\\nContent-Length: 1159\\r\\nServer: Werkzeug/0.16.0 Python/3.5.2\\r\\nDate: Wed, 04 Mar 2020 18:10:44 GMT\\r\\n\\r\\n<!DOCTYPE html>\\n<html>\\n  <head>\\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\\n    <link href=\"/static/style.css\" rel=\"stylesheet\">\\n    <script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"></script>\\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\\n    <title>flask-mecab-front</title>\\n  </head>\\n  <body>\\n    \\n<header class=\"container-fluid bHead\">\\n    <div class=\"container bHead\">\\n        <h1><a href=\"/\">\\xe5\\xbd\\xa2\\xe6\\x85\\x8b\\xe7\\xb4\\xa0\\xe8\\xa7\\xa3\\xe6\\x9e\\x90\\xe3\\x83\\x9a\\xe3\\x83\\xbc\\xe3\\x82\\xb8</a></h1>\\n    </div>\\n</header>\\n<div id=\"app\">\\n    <div class=\"container\">\\n        <mecab v-if=\"ok\"></mecab>\\n    </div>\\n</div>\\n<footer class=\"text-center container-fluid bFoot\">\\n    <div class=\"container\">\\n        <a href=\"https://github.com/matsulib/mecab-service\">Source Code</a>\\n    </div>\\n</footer>\\n\\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.13/vue.js\"></script> \\n    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\\n    <script>\\n      const FLASK_MECAB_URI = \\'http://api:5000/mecab/v1\\'\\n    </script>\\n    <script src=\"/static/app.js\"></script>\\n  </body>\\n</html>"
    },
    {
        "class_name": "Flask",
        "data": "HTTP/1.0 200 OK\\r\\nServer: SimpleHTTP/0.6 Python/2.7.15\\r\\nDate: Thu, 05 Mar 2020 12:48:23 GMT\\r\\nContent-type: text/html; charset=UTF-8\\r\\nContent-Length: 3702\\r\\n\\r\\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"><html>\\n<title>Directory listing for /</title>\\n<body>\\n<h2>Directory listing for /</h2>\\n<hr>\\n<ul>\\n<li><a href=\"access_process%282%29.lua\">access_process(2).lua</a>\\n<li><a href=\"access_process.lua\">access_process.lua</a>\\n<li><a href=\"billing_util.lua\">billing_util.lua</a>\\n<li><a href=\"client.ini\">client.ini</a>\\n<li><a href=\"client_agent.py\">client_agent.py</a>\\n<li><a href=\"config_util.lua\">config_util.lua</a>\\n<li><a href=\"device.txt\">device.txt</a>\\n<li><a href=\"flask-09110948.tar.gz\">flask-09110948.tar.gz</a>\\n<li><a href=\"flask-09231119.tar.gz\">flask-09231119.tar.gz</a>\\n<li><a href=\"flask-09231411.tar.gz\">flask-09231411.tar.gz</a>\\n<li><a href=\"flask-09231643.tar.gz\">flask-09231643.tar.gz</a>\\n<li><a href=\"flask-09301504.tar.gz\">flask-09301504.tar.gz</a>\\n<li><a href=\"flask-09301704.tar.gz\">flask-09301704.tar.gz</a>\\n<li><a href=\"global_server.conf\">global_server.conf</a>\\n<li><a href=\"header_filter_process.lua\">header_filter_process.lua</a>\\n<li><a href=\"hnonething.com.crt\">hnonething.com.crt</a>\\n<li><a href=\"hnonething.com.key\">hnonething.com.key</a>\\n<li><a href=\"influxdb-1.7.6.x86_64.rpm\">influxdb-1.7.6.x86_64.rpm</a>\\n<li><a href=\"influxdb.conf\">influxdb.conf</a>\\n<li><a href=\"log_process.lua\">log_process.lua</a>\\n<li><a href=\"logs_xml.config\">logs_xml.config</a>\\n<li><a href=\"mt_encrypt_body.lua\">mt_encrypt_body.lua</a>\\n<li><a href=\"newindexdumper.tar.gz\">newindexdumper.tar.gz</a>\\n<li><a href=\"newindexdumper_linux_x86_64\">newindexdumper_linux_x86_64</a>\\n<li><a href=\"platinum-relay-bkj-2.9.8-20191017202512_debug%20%281%29.tgz\">platinum-relay-bkj-2.9.8-20191017202512_debug (1).tgz</a>\\n<li><a href=\"platinum-relay-bkj-2.9.8-20191017202512_debug.tgz\">platinum-relay-bkj-2.9.8-20191017202512_debug.tgz</a>\\n<li><a href=\"platinum-relay-bkj-2.9.8-20191018143040_debug.tgz\">platinum-relay-bkj-2.9.8-20191018143040_debug.tgz</a>\\n<li><a href=\"platinum-relay-bkj-2.9.8-20191018143601_debug.tgz\">platinum-relay-bkj-2.9.8-20191018143601_debug.tgz</a>\\n<li><a href=\"platinum-relay-bkj-2.9.8-20191021114032_debug.tgz\">platinum-relay-bkj-2.9.8-20191021114032_debug.tgz</a>\\n<li><a href=\"platinum-relay-bkj-2.9.8-20191021175832_debug.tgz\">platinum-relay-bkj-2.9.8-20191021175832_debug.tgz</a>\\n<li><a href=\"platinum_hasher\">platinum_hasher</a>\\n<li><a href=\"platinumc_miner\">platinumc_miner</a>\\n<li><a href=\"platinumc_super\">platinumc_super</a>\\n<li><a href=\"plugin-platinum-wky-2.6.13-20190716211133.tgz\">plugin-platinum-wky-2.6.13-20190716211133.tgz</a>\\n<li><a href=\"reporter\">reporter</a>\\n<li><a href=\"reporter_x86_64\">reporter_x86_64</a>\\n<li><a href=\"sl.video.xycdn.n0808.com.crt\">sl.video.xycdn.n0808.com.crt</a>\\n<li><a href=\"sl.video.xycdn.n0808.com.key\">sl.video.xycdn.n0808.com.key</a>\\n<li><a href=\"static.xycloud.com.crt\">static.xycloud.com.crt</a>\\n<li><a href=\"static.xycloud.com.key\">static.xycloud.com.key</a>\\n<li><a href=\"temp/\">temp/</a>\\n<li><a href=\"temp.mp4\">temp.mp4</a>\\n<li><a href=\"test.mp4\">test.mp4</a>\\n<li><a href=\"test1.mp4\">test1.mp4</a>\\n<li><a href=\"util.lua\">util.lua</a>\\n<li><a href=\"working/\">working/</a>\\n<li><a href=\"www-09090959.tar.gz\">www-09090959.tar.gz</a>\\n<li><a href=\"www-09100719.tar.gz\">www-09100719.tar.gz</a>\\n<li><a href=\"www-09100919.tar.gz\">www-09100919.tar.gz</a>\\n<li><a href=\"www-09110946.tar.gz\">www-09110946.tar.gz</a>\\n<li><a href=\"www-09231116.tar.gz\">www-09231116.tar.gz</a>\\n<li><a href=\"www-09231411.tar.gz\">www-09231411.tar.gz</a>\\n<li><a href=\"www-09231418.tar.gz\">www-09231418.tar.gz</a>\\n<li><a href=\"www-09301704.tar.gz\">www-09301704.tar.gz</a>\\n<li><a href=\"%E8%B6%85%E7%BA%A7%E5%A4%A7%E8%AE%B2%E5%A0%82-%E6%9D%8E%E6%AD%A6%E7%92%90.mp4\">\\xe8\\xb6\\x85\\xe7\\xba\\xa7\\xe5\\xa4\\xa7\\xe8\\xae\\xb2\\xe5\\xa0\\x82-\\xe6\\x9d\\x8e\\xe6\\xad\\xa6\\xe7\\x92\\x90.mp4</a>\\n</ul>\\n<hr>\\n</body>\\n</html>\\n"
    },
    {
        "class_name": "Flask",
        "data": "HTTP/1.0 200 OK\\r\\nContent-Type: text/html; charset=utf-8\\r\\nContent-Length: 5311\\r\\nServer: Werkzeug/0.14.1 Python/3.6.8\\r\\nDate: Tue, 03 Mar 2020 00:00:32 GMT\\r\\n\\r\\n<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"UTF-8\">\\n    <meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\" />\\n    <meta http-equiv=\"Pragma\" content=\"no-cache\" />\\n    <meta http-equiv=\"Expires\" content=\"0\" />\\n    <!-- Bootstrap CSS -->\\n    <!-- \\xe6\\x96\\xb0 Bootstrap \\xe6\\xa0\\xb8\\xe5\\xbf\\x83 CSS \\xe6\\x96\\x87\\xe4\\xbb\\xb6 -->\\n    <link rel=\"stylesheet\" href=\"//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css\"></link>\\n    <!-- \\xe5\\x8f\\xaf\\xe9\\x80\\x89\\xe7\\x9a\\x84Bootstrap\\xe4\\xb8\\xbb\\xe9\\xa2\\x98\\xe6\\x96\\x87\\xe4\\xbb\\xb6\\xef\\xbc\\x88\\xe4\\xb8\\x80\\xe8\\x88\\xac\\xe4\\xb8\\x8d\\xe7\\x94\\xa8\\xe5\\xbc\\x95\\xe5\\x85\\xa5\\xef\\xbc\\x89 -->\\n    <link rel=\"stylesheet\" href=\"//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css\"></link>\\n    <!-- jQuery\\xe6\\x96\\x87\\xe4\\xbb\\xb6\\xe3\\x80\\x82\\xe5\\x8a\\xa1\\xe5\\xbf\\x85\\xe5\\x9c\\xa8bootstrap.min.js \\xe4\\xb9\\x8b\\xe5\\x89\\x8d\\xe5\\xbc\\x95\\xe5\\x85\\xa5 -->\\n    <script src=\"//cdn.bootcss.com/jquery/1.11.3/jquery.min.js\"></script>\\n    <!-- \\xe6\\x9c\\x80\\xe6\\x96\\xb0\\xe7\\x9a\\x84 Bootstrap \\xe6\\xa0\\xb8\\xe5\\xbf\\x83 JavaScript \\xe6\\x96\\x87\\xe4\\xbb\\xb6 -->\\n    <script src=\"//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js\"></script>\\n    <title>\\xe6\\xb8\\x85\\xe5\\x8d\\x8e\\xe4\\xba\\x94\\xe9\\x81\\x93\\xe5\\x8f\\xa3\\xe9\\x87\\x91\\xe8\\x9e\\x8dAI\\xe5\\xbc\\x80\\xe6\\x94\\xbe\\xe5\\xb9\\xb3\\xe5\\x8f\\xb0</title>\\n\\n    <style>\\n        body {\\n            /*background-image: url(\\'/static/images/aip/aip_main_top.png?v=20190820\\');*/\\n            background-repeat:no-repeat;\\n            background-position:top;\\n            background-attachment:fixed;\\n            background-color: #0A1327;\\n        }\\n        #main_blocks {\\n            margin-top: 1px;\\n        }\\n        #top_img {\\n        }\\n    </style>\\n\\n\\n  </head>\\n  <body>\\n    \\n<div class=\"navbar navbar-inverse\" role=\"navigation\">\\n    <div class=\"container\">\\n        <div class=\"navbar-header\">\\n            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\\n                <span class=\"sr-only\">Toggle navigation</span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n            </button>\\n            <a class=\"navbar-brand\" href=\"/main\">\\xe6\\xb8\\x85\\xe5\\x8d\\x8e\\xe4\\xba\\x94\\xe9\\x81\\x93\\xe5\\x8f\\xa3\\xe9\\x87\\x91\\xe8\\x9e\\x8dAI\\xe5\\xbc\\x80\\xe6\\x94\\xbe\\xe5\\xb9\\xb3\\xe5\\x8f\\xb0</a>\\n        </div>\\n        <div class=\"navbar-collapse collapse\">\\n            <ul class=\"nav navbar-nav\">\\n                <li><a href=\"/main\">\\xe4\\xb8\\xbb\\xe9\\xa1\\xb5</a></li>\\n                \\n            </ul>\\n            <ul class=\"nav navbar-nav navbar-right\">\\n                \\n                <li><a href=\"/auth/login\">\\xe7\\x99\\xbb\\xe9\\x99\\x86</a></li>\\n                \\n            </ul>\\n        </div>\\n    </div>\\n</div>\\n\\n    \\n<div class=\"container\">\\n    \\n\\n    \\n\\n    <!--<div align=\"center\" style=\"margin-top: 1px;position: relative;z-index: 0\">-->\\n        <!--<img src=\"/static/images/aip/aip_main_top.png?v=20190820\" style=\"width: 100%\">-->\\n    <!--</div>-->\\n    <div class=\"container\">\\n        <div class=\"row text-center\">\\n            <div class=\"col-lg-12\">\\n                <img class=\"img-responsive\" src=\"/static/images/aip/aip_main_top.png?v=20190820\" id=\"top_img\">\\n            </div>\\n        </div>\\n        <div class=\"row text-center\" id=\"main_blocks\">\\n            <div style=\"margin-top: 1px;position: relative;z-index: 0\">\\n                <div style=\"display: inline-block; background-color: #0A1327; padding: 20px\">\\n                    <a href=\"/aip/tech?v=201908080001\">\\n                    <img src=/static/images/img_11.png style=\"width: 300px;height: 200px\">\\n                    </a>\\n                    <div align=\"center\" >\\n                    <a href=\"/aip/tech\" style=\"text-decoration:none;font-family: PingFangSC-Regular;font-size: 20px;color: white;line-height: 28px\">\\xe9\\x87\\x91\\xe8\\x9e\\x8dAI\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe5\\xbc\\x80\\xe6\\x94\\xbe\\xe5\\xb9\\xb3\\xe5\\x8f\\xb0</a>\\n                    </div>\\n                </div>\\n                <div style=\"display: inline-block; background-color: #0A1327; padding: 20px;\">\\n                    <div>\\n                    <a href=\"/aip/qa?v=201908080001\">\\n                    <img src=/static/images/img_12.png style=\"width: 300px;height: 200px;\">\\n                    </a>\\n                    </div>\\n                    <div align=\"center\">\\n                    <a href=\"/aip/qa\" style=\"text-decoration:none;font-family: PingFangSC-Regular;font-size: 20px;color: white;line-height: 28px\">\\xe9\\x87\\x91\\xe8\\x9e\\x8dAI\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\xbc\\x80\\xe6\\x94\\xbe\\xe5\\xb9\\xb3\\xe5\\x8f\\xb0</a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\"row\" style=\"margin-top: 50px\">\\n            <div class=\"col-md-12\">\\n                <img class=\"img-responsive center-block\" src=\"/static/images/img_openai_bottom.png?v=201908080002\">\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n</div>\\n\\n\\n    \\n\\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js\"></script>\\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment-with-locales.min.js\" integrity=\"sha256-AdQN98MVZs44Eq2yTwtoKufhnU+uZ7v2kXnD5vqzZVo=\" crossorigin=\"anonymous\"></script>\\n<script>\\nmoment.locale(\"en\");\\nfunction flask_moment_render(elem) {\\n    $(elem).text(eval(\\'moment(\"\\' + $(elem).data(\\'timestamp\\') + \\'\").\\' + $(elem).data(\\'format\\') + \\';\\'));\\n    $(elem).removeClass(\\'flask-moment\\').show();\\n}\\nfunction flask_moment_render_all() {\\n    $(\\'.flask-moment\\')"
    },
    {
        "class_name": "Flask",
        "data": "HTTP/1.0 500 INTERNAL SERVER ERROR\r\nContent-Type: text/html; charset=utf-8\r\nX-XSS-Protection: 0\r\nConnection: close\r\nServer: Werkzeug/0.16.0 Python/3.7.4\r\nDate: Mon, 02 Mar 2020 12:51:52 GMT\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n  \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n  <head>\n    <title>KeyError: 'HTTP_USER_AGENT' // Werkzeug Debugger</title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"\n        type=\"text/css\">\n    <!-- We need to make sure this has a favicon so that the debugger does\n         not by accident trigger a request to /favicon.ico which might\n         change the application state. -->\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js\"></script>\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script>\n    <script type=\"text/javascript\">\n      var TRACEBACK = 4402707856,\n          CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"BgY7wQsbphN1kfEB2kk6\";\n    </script>\n  </head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>KeyError</h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">KeyError: 'HTTP_USER_AGENT'</p>\n</div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2>\n<div class=\"traceback\">\n  \n  <ul><li><div class=\"frame\" id=\"frame-4402707536\">\n  <h4>File <cite class=\"filename\">\"/usr/local/lib/python3.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2463</em>,\n      in <code class=\"function\">__call__</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ, start_response):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def __repr__(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-4402708304\">\n  <h4>File <cite class=\"filename\">\"/usr/local/lib/python3.7/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2449</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">           "
    },
    {
        "class_name": "Flask",
        "data": "HTTP/1.0 500 INTERNAL SERVER ERROR\r\nContent-Type: text/html; charset=utf-8\r\nX-XSS-Protection: 0\r\nConnection: close\r\nServer: Werkzeug/0.13 Python/2.7.15+\r\nDate: Sun, 01 Mar 2020 21:27:17 GMT\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n  \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n  <head>\n    <title>OperationalError: (2003, &quot;Can't connect to MySQL server on '0.0.0.0' (111)&quot;) // Werkzeug Debugger</title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"\n        type=\"text/css\">\n    <!-- We need to make sure this has a favicon so that the debugger does\n         not by accident trigger a request to /favicon.ico which might\n         change the application state. -->\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js\"></script>\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script>\n    <script type=\"text/javascript\">\n      var TRACEBACK = 140442297678864,\n          CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"xlJ8SluVuuAlhM43pjlA\";\n    </script>\n  </head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>_mysql_exceptions.OperationalError</h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">OperationalError: (2003, &quot;Can't connect to MySQL server on '0.0.0.0' (111)&quot;)</p>\n</div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2>\n<div class=\"traceback\">\n  \n  <ul><li><div class=\"frame\" id=\"frame-140442297678480\">\n  <h4>File <cite class=\"filename\">\"/usr/local/lib/python2.7/dist-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1997</em>,\n      in <code class=\"function\">__call__</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">                </span>error = None</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>ctx.auto_pop(error)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ, start_response):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&quot;&quot;&quot;Shortcut for :attr:`wsgi_app`.&quot;&quot;&quot;</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def __repr__(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return '&lt;%s %r&gt;' % (</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.__class__.__name__,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.name,</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-140442297679568\">\n  <h4>File <cite class=\"filename\">\"/usr/local/lib/python2.7/dist-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1985</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>raise</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-140442297679632\">\n  <h4>File <cite class=\"filename\">\"/usr/local/lib/python2.7/dist-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1540</em>,\n      in <code class=\"function\">handle_exception</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">            </span># if we want to repropagate the exception, we can attempt to</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># raise it with the whole traceback in case we can do that</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># (the function was actually called from the except part)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># otherwise, we just raise the error again</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if exc_value is e:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>reraise(exc_type, exc_value, tb)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>else:</pre>\n<pre class=\"line after\"><span class=\"ws\">    "
    },
    {
        "class_name": "Flask",
        "data": "HTTP/1.0 500 INTERNAL SERVER ERROR\r\nContent-Type: text/html; charset=utf-8\r\nX-XSS-Protection: 0\r\nConnection: close\r\nServer: Werkzeug/0.14.1 Python/3.6.7\r\nDate: Mon, 02 Mar 2020 08:12:33 GMT\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n  \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n  <head>\n    <title>sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) unable to open database file\n(Background on this error at: http://sqlalche.me/e/e3q8) // Werkzeug Debugger</title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\"\n        type=\"text/css\">\n    <!-- We need to make sure this has a favicon so that the debugger does\n         not by accident trigger a request to /favicon.ico which might\n         change the application state. -->\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js\"></script>\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script>\n    <script type=\"text/javascript\">\n      var TRACEBACK = 139637429028120,\n          CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"5astXbpk6k4rwQzJUGHm\";\n    </script>\n  </head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>sqlalchemy.exc.OperationalError</h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) unable to open database file\n(Background on this error at: http://sqlalche.me/e/e3q8)</p>\n</div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2>\n<div class=\"traceback\">\n  \n  <ul><li><div class=\"frame\" id=\"frame-139637429028232\">\n  <h4>File <cite class=\"filename\">\"/home/centos/.local/lib/python3.6/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2309</em>,\n      in <code class=\"function\">__call__</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ, start_response):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def __repr__(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return '&lt;%s %r&gt;' % (</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.__class__.__name__,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.name,</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139637429028568\">\n  <h4>File <cite class=\"filename\">\"/home/centos/.local/lib/python3.6/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2295</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>raise</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139637429028624\">\n  <h4>File <cite class=\"filename\">\"/home/centos/.local/lib/python3.6/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1741</em>,\n      in <code class=\"function\">handle_exception</code></h4>\n  <div class=\"source\"><pre class=\"line before\"><span class=\"ws\">            </span># if we want to repropagate the exception, we can attempt to</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># raise it with the whole traceback in case we can do that</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># (the function was actually called from the except part)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># otherwise, we just raise the error again</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if exc_value is e:"
    }
]